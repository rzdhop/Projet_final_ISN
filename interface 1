#!/bin/bash
# -*- coding: utf-8 -*-
import PIL
from tkinter import*
from tkinter.filedialog import *

def data_imgpass():
    global fenetre_2
    fenetre_2.destroy
    imgpass = open(filepath)
    Image.show(imgpass)

def img_cont():
    filepath2 = askopenfilename(title="Choisissez l'image",filetypes=[('png files','.png'),('jpg files','.jpg'),('all files','.*')])
    global photo2
    photo2 = PhotoImage(file=filepath2)
    #affiche l'image conteneur dans une nouvelle fentre
    var1= int(photo2.height())
    var2 = var1 + 30
    var3 = var1 + 15
    fenetre_3 = Toplevel(fenetre_1)
    Image_canvas2 = Canvas(fenetre_3, width=photo2.width(), height=photo2.height())
    Image_canvas2.create_image(0,0,anchor=NW,image=photo2)
    fenetre_3.minsize(photo2.width(),var2)
    fenetre_3.maxsize(photo2.width(),var2)
    fenetre_3.title("Image Hidder {}".format(filepath2))
    boutton_valid_cont = Button(fenetre_3,text="Valider", command = fenetre_3.destroy).place(relx= 0.5,y= var3,anchor=CENTER)
    Image_canvas2.place(relx=0, rely= 0,anchor=NW)

def img_pass():
    filepath = askopenfilename(title="Choisissez l'image",filetypes=[('png files','.png'),('all files','.*')])
    global photo,fenetre_2
    photo = PhotoImage(file=filepath)
    #affiche l'image a décripter dans une nouvelle fentre
    fenetre_2 = Toplevel(fenetre_1)
    var1= int(photo.height())
    var2 = var1 + 30
    var3 = var1 + 15
    Image_canvas = Canvas(fenetre_2, width=photo.width(), height=var2)
    Image_canvas.create_image(0,0,anchor=NW,image=photo)
    fenetre_2.minsize(photo.width(),var2)
    fenetre_2.maxsize(photo.width(),var2)
    fenetre_2.title("Image Hidded {}".format(filepath))
    boutton_valid_pass = Button(fenetre_2,text="Valider", command = data_imgpass).place(relx= 0.5,y= var3,anchor=CENTER)
    Image_canvas.place(relx=0, rely= 0,anchor=NW)


fenetre_1 = Tk()

fenetre_1.title("Stéganoraphie by Rida and Yasin")

#dimension et emplacement de la fentre au lancement du programme
fenetre_1.geometry("800x600+0+0")

ecran_x = fenetre_1.winfo_screenwidth()
ecran_y = fenetre_1.winfo_screenheight()

fenetre_x = 800
fenetre_y = 600

posX = (ecran_x // 2) - (fenetre_x // 2)
posY = (ecran_y // 2) - (fenetre_y // 2)

geo =("{}x{}+{}+{}".format(fenetre_x,fenetre_y,posX,posY))

fenetre_1.geometry(geo)

fenetre_1.minsize(650,400)#taille min en x*y

#afficher l'image pour décripter
Select_img = Button(fenetre_1,text="selectionnez une image pass",command = img_pass).place(relx=0.5, rely=0.3,height= 50,width= 300, anchor=CENTER)

#afficher l'image conteneur
Select_img2 = Button(fenetre_1,text="selectionnez une image cont",command = img_cont).place(relx=0.5, rely=0.5,height= 50,width= 300, anchor=CENTER)

#afficher une ligne de séparation
x1= ecran_x * 0.005
x2= ecran_x * 0.9
y1= 3
y2= 2
ligne_sepa = Canvas(fenetre_1,height = 10, width = 750)
ligne_sepa.create_line(x1,y1,x2,y2,width=5,fill='grey')
ligne_sepa.place(relx=0.5, rely=0.4, anchor=CENTER)

#Bouton quitter
boutton_quit = Button(fenetre_1,text="Quitter", command = fenetre_1.destroy).place(relx=0.85, rely=0.85,width= 100, height= 50, anchor=CENTER)

fenetre_1.mainloop()

